@page
@model Blogs.AdminSite.Pages.Permissions.IndexModel
@{
    Layout = "_layout";
    ViewData["Title"] = "权限管理";
}

<!-- 主内容区域 -->
<div class="container-fluid">
    <!-- 页面标题 -->
    <div class="page-header">
        <h1>部门管理</h1>
        <p class="text-muted">管理系统部门结构，分配用户和组织架构</p>
    </div>

    <div class="row">
        <!-- 左侧部门树 -->
        <div class="col-md-4">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">部门结构</h5>
                    <button class="btn btn-sm btn-outline-primary" id="expandAllBtn">
                        <i class="fas fa-expand me-1"></i>全部展开
                    </button>
                </div>
                <div class="card-body">
                    <div class="department-tree" id="departmentTree">
                        <div class="department-item active" data-id="1">
                            <i class="fas fa-building me-2"></i>总公司
                            <span class="user-count">(156)</span>
                        </div>
                        <div class="department-item" data-id="2" style="margin-left: 20px;">
                            <i class="fas fa-code me-2"></i>技术部
                            <span class="user-count">(42)</span>
                        </div>
                        <div class="department-item" data-id="3" style="margin-left: 40px;">
                            <i class="fas fa-laptop me-2"></i>前端开发组
                            <span class="user-count">(15)</span>
                        </div>
                        <div class="department-item" data-id="4" style="margin-left: 40px;">
                            <i class="fas fa-server me-2"></i>后端开发组
                            <span class="user-count">(20)</span>
                        </div>
                        <div class="department-item" data-id="5" style="margin-left: 20px;">
                            <i class="fas fa-pen me-2"></i>内容部
                            <span class="user-count">(35)</span>
                        </div>
                        <div class="department-item" data-id="6" style="margin-left: 40px;">
                            <i class="fas fa-edit me-2"></i>编辑组
                            <span class="user-count">(25)</span>
                        </div>
                        <div class="department-item" data-id="7" style="margin-left: 20px;">
                            <i class="fas fa-chart-line me-2"></i>市场部
                            <span class="user-count">(28)</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- 右侧部门列表 -->
        <div class="col-md-8">
            <!-- 搜索和操作区域 -->
            <div class="card">
                <div class="card-body">
                    <div class="row g-3 align-items-end">
                        <div class="col-md-4">
                            <label class="form-label">部门名称</label>
                            <div class="search-container">
                                <input type="text" class="form-control" id="searchDepartmentName" placeholder="请输入部门名称">
                                <i class="fas fa-search search-icon"></i>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">状态</label>
                            <select class="form-select" id="searchDepartmentStatus">
                                <option value="">全部</option>
                                <option value="1">启用</option>
                                <option value="0">禁用</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <button type="button" class="btn btn-primary w-100" id="searchDepartmentBtn">
                                <i class="fas fa-search me-2"></i>搜索
                            </button>
                        </div>
                    </div>

                    <div class="d-flex justify-content-between mt-3">
                        <div>
                            <button class="btn btn-success" id="addDepartmentBtn">
                                <i class="fas fa-plus me-2"></i> 添加部门
                            </button>
                            <button class="btn btn-info" id="addSubDepartmentBtn">
                                <i class="fas fa-folder-plus me-2"></i> 添加子部门
                            </button>
                            <button class="btn btn-danger" id="batchDeleteDepartmentBtn">
                                <i class="fas fa-trash me-2"></i> 批量删除
                            </button>
                        </div>
                        <div>
                            <button class="btn btn-outline-secondary" id="refreshDepartmentBtn">
                                <i class="fas fa-refresh me-2"></i> 刷新
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- 部门表格 -->
            <div class="card mt-4">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover" id="departmentTable">
                            <thead>
                                <tr>
                                    <th width="40">
                                        <input type="checkbox" id="checkAllDepartments">
                                    </th>
                                    <th>ID</th>
                                    <th>部门名称</th>
                                    <th>部门代码</th>
                                    <th>负责人</th>
                                    <th>用户数量</th>
                                    <th>状态</th>
                                    <th>创建时间</th>
                                    <th width="180">操作</th>
                                </tr>
                            </thead>
                            <tbody id="departmentTableBody">
                                <!-- 数据将通过JavaScript动态加载 -->
                                <tr>
                                    <td colspan="9" class="data-loading">
                                        <i class="fas fa-spinner fa-spin me-2"></i>数据加载中...
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <!-- Layui分页 -->
                    <div id="departmentPage" class="d-flex justify-content-center"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 模态框区域 -->
<!-- 添加/编辑部门模态框 -->
<div class="modal fade" id="departmentModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="departmentModalTitle">添加部门</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form class="layui-form" id="departmentForm">
                    <input type="hidden" id="departmentId">
                    <div class="layui-form-item">
                        <label class="layui-form-label">上级部门</label>
                        <div class="layui-input-block">
                            <select id="parentDepartment" name="parentDepartment" class="layui-select">
                                <option value="0">无上级部门</option>
                                <option value="1">总公司</option>
                                <option value="2">技术部</option>
                                <option value="5">内容部</option>
                                <option value="7">市场部</option>
                            </select>
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">部门名称</label>
                        <div class="layui-input-block">
                            <input type="text" id="departmentName" name="departmentName" lay-verify="required" placeholder="请输入部门名称" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">部门代码</label>
                        <div class="layui-input-block">
                            <input type="text" id="departmentCode" name="departmentCode" lay-verify="required" placeholder="请输入部门代码" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">负责人</label>
                        <div class="layui-input-block">
                            <select id="departmentManager" name="departmentManager" class="layui-select">
                                <option value="">请选择负责人</option>
                                <option value="1">张总</option>
                                <option value="2">李经理</option>
                                <option value="3">王组长</option>
                                <option value="4">赵组长</option>
                            </select>
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">描述</label>
                        <div class="layui-input-block">
                            <textarea id="departmentDescription" name="departmentDescription" placeholder="请输入部门描述" class="layui-textarea"></textarea>
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">状态</label>
                        <div class="layui-input-block">
                            <input type="checkbox" id="departmentStatus" name="status" lay-skin="switch" lay-text="启用|禁用" checked>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-primary" id="saveDepartmentBtn">
                    <i class="fas fa-save me-2"></i>保存
                </button>
            </div>
        </div>
    </div>
</div>

<!-- 先加载jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<!-- 然后加载Bootstrap -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<!-- 最后加载Layui -->
<script src="https://cdn.jsdelivr.net/npm/layui@2.8.18/dist/layui.min.js"></script>

<script>
    // 模拟数据 - 模拟从后端API获取的数据
    const mockDepartmentData = [
        {id: 1, name: '总公司', code: 'HEAD', manager: '张总', userCount: 156, status: '启用', createTime: '2023-01-15'},
        {id: 2, name: '技术部', code: 'TECH', manager: '李经理', userCount: 42, status: '启用', createTime: '2023-02-20'},
        {id: 3, name: '前端开发组', code: 'FRONTEND', manager: '王组长', userCount: 15, status: '启用', createTime: '2023-03-10'},
        {id: 4, name: '后端开发组', code: 'BACKEND', manager: '赵组长', userCount: 20, status: '启用', createTime: '2023-03-15'},
        {id: 5, name: '内容部', code: 'CONTENT', manager: '钱经理', userCount: 35, status: '启用', createTime: '2023-04-01'},
        {id: 6, name: '编辑组', code: 'EDIT', manager: '孙组长', userCount: 25, status: '启用', createTime: '2023-04-10'},
        {id: 7, name: '市场部', code: 'MARKET', manager: '周经理', userCount: 28, status: '启用', createTime: '2023-04-15'},
        {id: 8, name: '销售部', code: 'SALES', manager: '吴经理', userCount: 32, status: '启用', createTime: '2023-05-01'},
        {id: 9, name: '客服部', code: 'SERVICE', manager: '郑经理', userCount: 18, status: '启用', createTime: '2023-05-10'},
        {id: 10, name: '财务部', code: 'FINANCE', manager: '王总监', userCount: 12, status: '启用', createTime: '2023-05-15'},
        {id: 11, name: '人事部', code: 'HR', manager: '冯经理', userCount: 8, status: '启用', createTime: '2023-06-01'},
        {id: 12, name: '行政部', code: 'ADMIN', manager: '陈主管', userCount: 10, status: '禁用', createTime: '2023-06-10'},
        {id: 13, name: '研发部', code: 'R&D', manager: '褚经理', userCount: 24, status: '启用', createTime: '2023-06-15'},
        {id: 14, name: '测试部', code: 'QA', manager: '卫组长', userCount: 16, status: '启用', createTime: '2023-07-01'},
        {id: 15, name: '运维部', code: 'OPS', manager: '蒋工程师', userCount: 14, status: '启用', createTime: '2023-07-10'},
        {id: 16, name: '设计部', code: 'DESIGN', manager: '沈设计师', userCount: 9, status: '启用', createTime: '2023-07-15'},
        {id: 17, name: '产品部', code: 'PRODUCT', manager: '韩经理', userCount: 11, status: '启用', createTime: '2023-08-01'},
        {id: 18, name: '项目部', code: 'PROJECT', manager: '杨经理', userCount: 13, status: '禁用', createTime: '2023-08-10'},
        {id: 19, name: '质量部', code: 'QUALITY', manager: '朱主管', userCount: 7, status: '启用', createTime: '2023-08-15'},
        {id: 20, name: '采购部', code: 'PURCHASE', manager: '秦专员', userCount: 5, status: '启用', createTime: '2023-09-01'}
    ];

    // 模拟API调用 - 获取分页数据
    function getDepartmentData(page, limit, searchParams = {}) {
        return new Promise((resolve) => {
            // 模拟网络延迟
            setTimeout(() => {
                let filteredData = [...mockDepartmentData];

                // 应用搜索筛选
                if (searchParams.name) {
                    filteredData = filteredData.filter(dept =>
                        dept.name.includes(searchParams.name)
                    );
                }

                if (searchParams.status) {
                    filteredData = filteredData.filter(dept =>
                        dept.status === (searchParams.status === '1' ? '启用' : '禁用')
                    );
                }

                const total = filteredData.length;
                const startIndex = (page - 1) * limit;
                const endIndex = Math.min(startIndex + limit, total);
                const pageData = filteredData.slice(startIndex, endIndex);

                resolve({
                    code: 0,
                    msg: '成功',
                    count: total,
                    data: pageData
                });
            }, 300); // 模拟300ms网络延迟
        });
    }

    // 页面加载完成后执行
    document.addEventListener('DOMContentLoaded', function() {
        // 初始化Layui
        layui.use(['form', 'layer', 'laypage'], function() {
            var form = layui.form;
            var layer = layui.layer;
            var laypage = layui.laypage;

            // 当前分页状态
            let currentPage = 1;
            let currentLimit = 10;
            let currentSearchParams = {};

            // 初始化分页
            function initPagination(total, page = 1, limit = 10) {
                laypage.render({
                    elem: 'departmentPage',
                    count: total,
                    curr: page,
                    limit: limit,
                    limits: [5, 10, 15, 20],
                    layout: ['count', 'prev', 'page', 'next', 'limit', 'skip'],
                    theme: '#3498db',
                    jump: function(obj, first) {
                        if (!first) {
                            currentPage = obj.curr;
                            currentLimit = obj.limit;
                            loadDepartmentData(currentPage, currentLimit, currentSearchParams);
                        }
                    }
                });
            }

            // 加载部门数据
            function loadDepartmentData(page, limit, searchParams = {}) {
                // 显示加载状态
                const tbody = document.getElementById('departmentTableBody');
                tbody.innerHTML = '<tr><td colspan="9" class="data-loading"><i class="fas fa-spinner fa-spin me-2"></i>数据加载中...</td></tr>';

                getDepartmentData(page, limit, searchParams).then(res => {
                    if (res.code === 0) {
                        renderDepartmentTable(res.data);
                        initPagination(res.count, page, limit);
                    } else {
                        layer.msg('数据加载失败: ' + res.msg, {icon: 2});
                    }
                }).catch(err => {
                    layer.msg('数据加载失败: ' + err.message, {icon: 2});
                });
            }

            // 渲染部门表格
            function renderDepartmentTable(data) {
                const tbody = document.getElementById('departmentTableBody');

                if (data.length === 0) {
                    tbody.innerHTML = '<tr><td colspan="9" class="text-center py-4">暂无数据</td></tr>';
                    return;
                }

                let html = '';
                data.forEach(dept => {
                    const statusBadge = dept.status === '启用' ?
                        '<span class="badge bg-success">启用</span>' :
                        '<span class="badge bg-secondary">禁用</span>';

                    html += `
                        <tr>
                            <td><input type="checkbox" class="department-checkbox" value="${dept.id}"></td>
                            <td>${dept.id}</td>
                            <td>${dept.name}</td>
                            <td>${dept.code}</td>
                            <td>${dept.manager}</td>
                            <td>${dept.userCount}</td>
                            <td>${statusBadge}</td>
                            <td>${dept.createTime}</td>
                            <td>
                                <button class="btn btn-sm btn-primary edit-department-btn btn-fixed-width" data-id="${dept.id}">
                                    <i class="fas fa-edit btn-icon"></i>编辑
                                </button>
                                <button class="btn btn-sm btn-danger delete-department-btn btn-fixed-width" data-id="${dept.id}">
                                    <i class="fas fa-trash btn-icon"></i>删除
                                </button>
                            </td>
                        </tr>
                    `;
                });

                tbody.innerHTML = html;

                // 重新绑定事件
                bindDepartmentEvents();
            }

            // 绑定部门相关事件
            function bindDepartmentEvents() {
                // 全选/取消全选
                $('#checkAllDepartments').off('change').on('change', function() {
                    $('.department-checkbox').prop('checked', $(this).prop('checked'));
                });

                // 编辑部门按钮点击事件
                $('.edit-department-btn').off('click').on('click', function() {
                    const departmentId = $(this).data('id');
                    const department = mockDepartmentData.find(dept => dept.id == departmentId);

                    if (department) {
                        $('#departmentModalTitle').text('编辑部门');
                        $('#departmentId').val(department.id);
                        $('#departmentName').val(department.name);
                        $('#departmentCode').val(department.code);
                        $('#departmentDescription').val(department.description || '');

                        // 设置状态
                        $('#departmentStatus').prop('checked', department.status === '启用');

                        form.render();

                        var modal = new bootstrap.Modal(document.getElementById('departmentModal'));
                        modal.show();
                    }
                });

                // 删除部门按钮点击事件
                $('.delete-department-btn').off('click').on('click', function() {
                    const departmentId = $(this).data('id');
                    const departmentName = $(this).closest('tr').find('td:eq(2)').text();

                    layer.confirm('确定要删除部门 "' + departmentName + '" 吗？', {
                        icon: 3,
                        title: '删除确认'
                    }, function(index) {
                        // 模拟删除操作
                        layer.msg('删除成功', {icon: 1});
                        layer.close(index);

                        // 重新加载数据
                        loadDepartmentData(currentPage, currentLimit, currentSearchParams);
                    });
                });
            }

            // 搜索功能
            $('#searchDepartmentBtn').on('click', function() {
                const name = $('#searchDepartmentName').val();
                const status = $('#searchDepartmentStatus').val();

                currentSearchParams = {};
                if (name) currentSearchParams.name = name;
                if (status) currentSearchParams.status = status;

                currentPage = 1;
                loadDepartmentData(currentPage, currentLimit, currentSearchParams);
            });

            // 刷新功能
            $('#refreshDepartmentBtn').on('click', function() {
                $('#searchDepartmentName').val('');
                $('#searchDepartmentStatus').val('');

                currentSearchParams = {};
                currentPage = 1;
                loadDepartmentData(currentPage, currentLimit);

                layer.msg('数据已刷新', {icon: 1});
            });

            // 初始化加载数据
            loadDepartmentData(currentPage, currentLimit);

            // 其他原有功能保持不变...
            // 侧边栏折叠/展开功能
            document.getElementById('toggleSidebar').addEventListener('click', function() {
                document.body.classList.toggle('sidebar-collapsed');

                // 隐藏或显示所有箭头图标
                const menuArrows = document.querySelectorAll('.menu-arrow');
                menuArrows.forEach(arrow => {
                    arrow.style.display = document.body.classList.contains('sidebar-collapsed') ? 'none' : 'block';
                });

                // 保存用户偏好设置到本地存储
                if (document.body.classList.contains('sidebar-collapsed')) {
                    localStorage.setItem('sidebarCollapsed', 'true');
                } else {
                    localStorage.setItem('sidebarCollapsed', 'false');
                }
            });

            // 页面加载时检查用户偏好设置
            const sidebarCollapsed = localStorage.getItem('sidebarCollapsed');
            if (sidebarCollapsed === 'true') {
                document.body.classList.add('sidebar-collapsed');

                // 隐藏所有箭头图标
                const menuArrows = document.querySelectorAll('.menu-arrow');
                menuArrows.forEach(arrow => {
                    arrow.style.display = 'none';
                });
            }

            // 二级菜单展开/收起功能
            const submenuToggles = document.querySelectorAll('.submenu-toggle');

            submenuToggles.forEach(toggle => {
                toggle.addEventListener('click', function() {
                    const submenu = this.nextElementSibling;
                    const arrowIcon = this.querySelector('.menu-arrow');

                    // 切换子菜单的展开状态
                    submenu.classList.toggle('open');

                    // 切换箭头图标的方向
                    if (arrowIcon.classList.contains('fa-chevron-down')) {
                        arrowIcon.classList.remove('fa-chevron-down');
                        arrowIcon.classList.add('fa-chevron-up');
                    } else {
                        arrowIcon.classList.remove('fa-chevron-up');
                        arrowIcon.classList.add('fa-chevron-down');
                    }
                });
            });

            // 菜单项点击激活状态
            const menuItems = document.querySelectorAll('.sidebar-menu a');
            const currentPath = window.location.pathname;

            menuItems.forEach(item => {
                // 设置当前页面菜单项为激活状态
                if (item.getAttribute('href') === currentPath ||
                    (currentPath === '/' && item.getAttribute('href') === '/')) {
                    item.classList.add('active');

                    // 自动展开父级菜单
                    const parentMenu = item.closest('.submenu');
                    if (parentMenu) {
                        parentMenu.classList.add('open');
                        const toggle = parentMenu.previousElementSibling;
                        if (toggle) {
                            const arrowIcon = toggle.querySelector('.menu-arrow');
                            if (arrowIcon) {
                                arrowIcon.classList.remove('fa-chevron-down');
                                arrowIcon.classList.add('fa-chevron-up');
                            }
                        }
                    }
                }

                item.addEventListener('click', function(e) {
                    if (this.classList.contains('submenu-toggle')) {
                        e.preventDefault();
                        return;
                    }

                    menuItems.forEach(i => i.classList.remove('active'));
                    this.classList.add('active');
                });
            });

            // 部门树点击事件
            const departmentItems = document.querySelectorAll('.department-item');
            departmentItems.forEach(item => {
                item.addEventListener('click', function() {
                    departmentItems.forEach(i => i.classList.remove('active'));
                    this.classList.add('active');
                });
            });

            // 全部展开按钮
            document.getElementById('expandAllBtn').addEventListener('click', function() {
                layer.msg('已展开所有部门', {icon: 1});
            });
        });
    });

    // 响应式处理
    window.addEventListener('resize', function() {
        if (window.innerWidth <= 768) {
            document.body.classList.add('sidebar-collapsed');

            // 隐藏所有箭头图标
            const menuArrows = document.querySelectorAll('.menu-arrow');
            menuArrows.forEach(arrow => {
                arrow.style.display = 'none';
            });
        }
    });
</script>