@page
@model Blogs.AdminSite.Pages.Users.IndexModel
@{
    ViewData["Title"] = "用户管理";
    Layout = "_Layout";
}
<!-- 统计卡片 -->
<div class="row">
    <div class="col-md-3">
        <div class="card fade-in">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h5 class="card-title text-primary">用户总数</h5>
                        <h3 class="mb-0" id="totalUsers">0</h3>
                        <small class="text-muted">注册用户数量</small>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-users fa-2x text-primary"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card fade-in">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h5 class="card-title text-success">活跃用户</h5>
                        <h3 class="mb-0" id="activeUsers">0</h3>
                        <small class="text-muted">本月登录用户</small>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-user-check fa-2x text-success"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card fade-in">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h5 class="card-title text-warning">管理员</h5>
                        <h3 class="mb-0" id="adminUsers">0</h3>
                        <small class="text-muted">系统管理员数量</small>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-user-shield fa-2x text-warning"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card fade-in">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h5 class="card-title text-info">新增用户</h5>
                        <h3 class="mb-0" id="newUsers">0</h3>
                        <small class="text-muted">本月新增用户</small>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-user-plus fa-2x text-info"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 搜索和操作区域 -->
<div class="card mt-4">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">用户列表</h5>
        <div>
            <button class="btn btn-success btn-sm" id="addUserBtn">
                <i class="fas fa-plus me-1"></i> 添加用户
            </button>
            <button class="btn btn-outline-secondary btn-sm" id="refreshBtn">
                <i class="fas fa-refresh me-1"></i> 刷新
            </button>
        </div>
    </div>
    <div class="card-body">
        <!-- 搜索表单 -->
        <div class="row g-3 mb-3">
            <div class="col-md-3">
                <input type="text" class="form-control form-control-sm" id="searchKeyword" placeholder="用户名/姓名/邮箱">
            </div>
            <div class="col-md-2">
                <select class="form-select form-select-sm" id="searchRole">
                    <option value="">全部角色</option>
                    <option value="admin">管理员</option>
                    <option value="user">普通用户</option>
                    <option value="editor">编辑</option>
                </select>
            </div>
            <div class="col-md-2">
                <select class="form-select form-select-sm" id="searchStatus">
                    <option value="">全部状态</option>
                    <option value="1">正常</option>
                    <option value="0">禁用</option>
                </select>
            </div>
            <div class="col-md-2">
                <button type="button" class="btn btn-primary btn-sm w-100" id="searchBtn">
                    <i class="fas fa-search me-1"></i> 搜索
                </button>
            </div>
            <div class="col-md-3 text-end">
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="checkbox" id="selectAll">
                    <label class="form-check-label" for="selectAll">全选</label>
                </div>
                <button class="btn btn-danger btn-sm" id="batchDeleteBtn" disabled>
                    <i class="fas fa-trash me-1"></i> 批量删除
                </button>
            </div>
        </div>

        <!-- 用户表格 -->
        <div class="table-responsive">
            <table class="table table-hover" id="userTable">
                <thead class="table-light">
                    <tr>
                        <th width="40">
                            <input type="checkbox" id="checkAll">
                        </th>
                        <th>ID</th>
                        <th>用户名</th>
                        <th>姓名</th>
                        <th>手机号</th>
                        <th>邮箱</th>
                        <th>角色</th>
                        <th>状态</th>
                        <th>最后登录</th>
                        <th>注册时间</th>
                        <th width="120">操作</th>
                    </tr>
                </thead>
                <tbody id="userTableBody">
                    <!-- 用户数据将通过JavaScript动态加载 -->
                </tbody>
            </table>
        </div>

        <!-- 分页 -->
        <div class="d-flex justify-content-between align-items-center mt-3">
            <div id="paginationInfo">显示第 1 到 10 条，共 0 条记录</div>
            <nav>
                <ul class="pagination pagination-sm" id="pagination">
                    <!-- 分页将通过JavaScript动态生成 -->
                </ul>
            </nav>
        </div>
    </div>
</div>

<!-- 添加/编辑用户弹框 -->
<div class="modal fade" id="userModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">添加用户</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form class="row g-3" id="userForm">
                    <input type="hidden" id="userId">

                    <div class="col-md-6">
                        <label for="username" class="form-label">用户名 <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="username" name="username" required>
                        <div class="invalid-feedback">请输入用户名</div>
                    </div>

                    <div class="col-md-6">
                        <label for="realname" class="form-label">姓名 <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="realname" name="realname" required>
                        <div class="invalid-feedback">请输入姓名</div>
                    </div>

                    <div class="col-md-6">
                        <label for="phone" class="form-label">手机号 <span class="text-danger">*</span></label>
                        <input type="tel" class="form-control" id="phone" name="phone" required>
                        <div class="invalid-feedback">请输入正确的手机号</div>
                    </div>

                    <div class="col-md-6">
                        <label for="email" class="form-label">邮箱 <span class="text-danger">*</span></label>
                        <input type="email" class="form-control" id="email" name="email" required>
                        <div class="invalid-feedback">请输入正确的邮箱地址</div>
                    </div>

                    <div class="col-md-6">
                        <label for="role" class="form-label">角色 <span class="text-danger">*</span></label>
                        <select class="form-select" id="role" name="role" required>
                            <option value="">请选择角色</option>
                            <option value="admin">管理员</option>
                            <option value="editor">编辑</option>
                            <option value="user">普通用户</option>
                        </select>
                        <div class="invalid-feedback">请选择用户角色</div>
                    </div>

                    <div class="col-md-6">
                        <label class="form-label">状态</label>
                        <div class="form-check form-switch mt-2">
                            <input class="form-check-input" type="checkbox" id="status" name="status" checked>
                            <label class="form-check-label" for="status">启用用户</label>
                        </div>
                    </div>

                    <div class="col-md-6" id="passwordField">
                        <label for="password" class="form-label">密码 <span class="text-danger">*</span></label>
                        <input type="password" class="form-control" id="password" name="password" required>
                        <div class="invalid-feedback">密码必须6-20位，且不能包含空格</div>
                    </div>

                    <div class="col-md-6" id="confirmPasswordField">
                        <label for="confirmPassword" class="form-label">确认密码 <span class="text-danger">*</span></label>
                        <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
                        <div class="invalid-feedback">两次输入的密码不一致</div>
                    </div>

                    <div class="col-12">
                        <label for="description" class="form-label">备注</label>
                        <textarea class="form-control" id="description" name="description" rows="2"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-primary" id="saveUserBtn">保存</button>
            </div>
        </div>
    </div>
</div>

<!-- 用户详情弹框 -->
<div class="modal fade" id="userDetailModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">用户详情</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-4 text-center">
                        <div class="avatar-lg bg-primary text-white rounded-circle d-inline-flex align-items-center justify-content-center mb-3" style="width: 80px; height: 80px; font-size: 2rem;">
                            <span id="detailAvatar">A</span>
                        </div>
                        <h5 id="detailRealname">管理员</h5>
                        <span class="badge bg-success" id="detailStatus">正常</span>
                    </div>
                    <div class="col-md-8">
                        <table class="table table-borderless table-sm">
                            <tr>
                                <td width="30%">用户名:</td>
                                <td id="detailUsername">admin</td>
                            </tr>
                            <tr>
                                <td>手机号:</td>
                                <td id="detailPhone">13800138001</td>
                            </tr>
                            <tr>
                                <td>邮箱:</td>
                                <td id="detailEmail">admin@example.com</td>
                            </tr>
                            <tr>
                                <td>角色:</td>
                                <td id="detailRole">管理员</td>
                            </tr>
                            <tr>
                                <td>注册时间:</td>
                                <td id="detailCreateTime">2023-01-15</td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">关闭</button>
            </div>
        </div>
    </div>
</div>

<script>
    // 用户管理功能
    layui.use(['form', 'layer'], function() {
        var form = layui.form;
        var layer = layui.layer;
        var $ = layui.$;

        // 模拟用户数据
        var userData = [
            {id: 1, username: 'admin', realname: '管理员', phone: '13800138001', email: 'admin@example.com', role: 'admin', status: 1, lastLogin: '2023-10-20 14:30:25', createTime: '2023-01-15', description: '系统管理员'},
            {id: 2, username: 'zhangsan', realname: '张三', phone: '13800138002', email: 'zhangsan@example.com', role: 'user', status: 1, lastLogin: '2023-10-19 09:15:30', createTime: '2023-02-20', description: '普通用户'},
            {id: 3, username: 'lisi', realname: '李四', phone: '13800138003', email: 'lisi@example.com', role: 'editor', status: 0, lastLogin: '2023-10-15 16:45:12', createTime: '2023-03-10', description: '内容编辑'},
            {id: 4, username: 'wangwu', realname: '王五', phone: '13800138004', email: 'wangwu@example.com', role: 'user', status: 1, lastLogin: '2023-10-18 11:20:05', createTime: '2023-04-05', description: '普通用户'},
            {id: 5, username: 'zhaoliu', realname: '赵六', phone: '13800138005', email: 'zhaoliu@example.com', role: 'user', status: 1, lastLogin: '2023-10-17 13:40:18', createTime: '2023-05-12', description: '普通用户'}
        ];

        // 当前页和每页大小
        var currentPage = 1;
        var pageSize = 10;
        var totalUsers = userData.length;

        // 初始化页面
        function initPage() {
            updateStats();
            renderUserTable();
            bindEvents();
            setupPagination();
        }

        // 更新统计信息
        function updateStats() {
            $('#totalUsers').text(totalUsers);
            $('#activeUsers').text(userData.filter(u => u.status === 1).length);
            $('#adminUsers').text(userData.filter(u => u.role === 'admin').length);
            $('#newUsers').text(userData.filter(u => {
                var createDate = new Date(u.createTime);
                var now = new Date();
                return createDate.getMonth() === now.getMonth() &&
                       createDate.getFullYear() === now.getFullYear();
            }).length);
        }

        // 渲染用户表格
        function renderUserTable(filteredData) {
            var data = filteredData || userData;
            var tbody = $('#userTableBody');
            tbody.empty();

            // 计算当前页的数据
            var startIndex = (currentPage - 1) * pageSize;
            var endIndex = Math.min(startIndex + pageSize, data.length);
            var pageData = data.slice(startIndex, endIndex);

            if (pageData.length === 0) {
                tbody.append('<tr><td colspan="11" class="text-center text-muted py-4">暂无用户数据</td></tr>');
                return;
            }

            pageData.forEach(function(user) {
                var statusText = user.status == 1 ?
                    '<span class="badge bg-success">正常</span>' :
                    '<span class="badge bg-danger">禁用</span>';

                var roleText = getRoleText(user.role);
                var roleClass = getRoleClass(user.role);

                var row = '<tr>' +
                    '<td><input type="checkbox" class="user-checkbox" value="' + user.id + '"></td>' +
                    '<td>' + user.id + '</td>' +
                    '<td>' + user.username + '</td>' +
                    '<td>' + user.realname + '</td>' +
                    '<td>' + user.phone + '</td>' +
                    '<td>' + user.email + '</td>' +
                    '<td><span class="badge ' + roleClass + '">' + roleText + '</span></td>' +
                    '<td>' + statusText + '</td>' +
                    '<td>' + user.lastLogin + '</td>' +
                    '<td>' + user.createTime + '</td>' +
                    '<td>' +
                    '<button class="btn btn-sm btn-outline-primary view-btn" data-id="' + user.id + '" title="查看"><i class="fas fa-eye"></i></button> ' +
                    '<button class="btn btn-sm btn-outline-success edit-btn" data-id="' + user.id + '" title="编辑"><i class="fas fa-edit"></i></button> ' +
                    '<button class="btn btn-sm btn-outline-danger delete-btn" data-id="' + user.id + '" title="删除"><i class="fas fa-trash"></i></button>' +
                    '</td>' +
                    '</tr>';

                tbody.append(row);
            });

            // 更新分页信息
            updatePaginationInfo(data.length);
        }

        // 获取角色文本
        function getRoleText(role) {
            var roleMap = {
                'admin': '管理员',
                'editor': '编辑',
                'user': '普通用户'
            };
            return roleMap[role] || role;
        }

        // 获取角色样式类
        function getRoleClass(role) {
            var classMap = {
                'admin': 'bg-danger',
                'editor': 'bg-warning',
                'user': 'bg-primary'
            };
            return classMap[role] || 'bg-secondary';
        }

        // 设置分页
        function setupPagination() {
            var totalPages = Math.ceil(totalUsers / pageSize);
            var pagination = $('#pagination');
            pagination.empty();

            // 上一页
            var prevClass = currentPage === 1 ? 'disabled' : '';
            pagination.append('<li class="page-item ' + prevClass + '"><a class="page-link" href="#" data-page="prev">上一页</a></li>');

            // 页码
            for (var i = 1; i <= totalPages; i++) {
                var activeClass = i === currentPage ? 'active' : '';
                pagination.append('<li class="page-item ' + activeClass + '"><a class="page-link" href="#" data-page="' + i + '">' + i + '</a></li>');
            }

            // 下一页
            var nextClass = currentPage === totalPages ? 'disabled' : '';
            pagination.append('<li class="page-item ' + nextClass + '"><a class="page-link" href="#" data-page="next">下一页</a></li>');
        }

        // 更新分页信息
        function updatePaginationInfo(total) {
            var start = (currentPage - 1) * pageSize + 1;
            var end = Math.min(currentPage * pageSize, total);
            $('#paginationInfo').text('显示第 ' + start + ' 到 ' + end + ' 条，共 ' + total + ' 条记录');
        }

        // 绑定事件
        function bindEvents() {
            // 全选/取消全选
            $('#checkAll').on('change', function() {
                $('.user-checkbox').prop('checked', this.checked);
                updateBatchDeleteButton();
            });

            // 单个复选框改变
            $(document).on('change', '.user-checkbox', function() {
                updateBatchDeleteButton();
                // 如果所有复选框都被选中，则全选复选框也应该被选中
                var allChecked = $('.user-checkbox:checked').length === $('.user-checkbox').length;
                $('#checkAll').prop('checked', allChecked);
            });

            // 搜索按钮
            $('#searchBtn').on('click', function() {
                performSearch();
            });

            // 回车键搜索
            $('#searchKeyword').on('keypress', function(e) {
                if (e.which === 13) {
                    performSearch();
                }
            });

            // 添加用户按钮
            $('#addUserBtn').on('click', function() {
                showUserModal('add');
            });

            // 查看用户详情
            $(document).on('click', '.view-btn', function() {
                var userId = $(this).data('id');
                showUserDetail(userId);
            });

            // 编辑用户
            $(document).on('click', '.edit-btn', function() {
                var userId = $(this).data('id');
                showUserModal('edit', userId);
            });

            // 删除用户
            $(document).on('click', '.delete-btn', function() {
                var userId = $(this).data('id');
                deleteUser(userId);
            });

            // 批量删除
            $('#batchDeleteBtn').on('click', function() {
                batchDeleteUsers();
            });

            // 刷新按钮
            $('#refreshBtn').on('click', function() {
                currentPage = 1;
                renderUserTable();
                setupPagination();
                layer.msg('数据已刷新', {icon: 1});
            });

            // 保存用户
            $('#saveUserBtn').on('click', function() {
                saveUser();
            });

            // 分页点击
            $(document).on('click', '.page-link', function(e) {
                e.preventDefault();
                var page = $(this).data('page');

                if (page === 'prev' && currentPage > 1) {
                    currentPage--;
                } else if (page === 'next' && currentPage < Math.ceil(totalUsers / pageSize)) {
                    currentPage++;
                } else if (typeof page === 'number') {
                    currentPage = page;
                }

                renderUserTable();
                setupPagination();
            });

            // 表单验证
            $('#userForm input, #userForm select').on('blur', function() {
                validateField($(this));
            });
        }

        // 执行搜索
        function performSearch() {
            var keyword = $('#searchKeyword').val().toLowerCase();
            var role = $('#searchRole').val();
            var status = $('#searchStatus').val();

            var filteredData = userData.filter(function(user) {
                var matchesKeyword = !keyword ||
                    user.username.toLowerCase().includes(keyword) ||
                    user.realname.toLowerCase().includes(keyword) ||
                    user.email.toLowerCase().includes(keyword);

                var matchesRole = !role || user.role === role;
                var matchesStatus = !status || user.status.toString() === status;

                return matchesKeyword && matchesRole && matchesStatus;
            });

            currentPage = 1;
            renderUserTable(filteredData);
            setupPagination(filteredData.length);
        }

        // 显示用户模态框
        function showUserModal(mode, userId) {
            $('#userForm')[0].reset();
            $('#userForm').removeClass('was-validated');

            if (mode === 'add') {
                $('#modalTitle').text('添加用户');
                $('#userId').val('');
                $('#passwordField').show();
                $('#confirmPasswordField').show();
                $('#password').prop('required', true);
                $('#confirmPassword').prop('required', true);
            } else {
                $('#modalTitle').text('编辑用户');
                var user = userData.find(u => u.id == userId);
                if (user) {
                    $('#userId').val(user.id);
                    $('#username').val(user.username);
                    $('#realname').val(user.realname);
                    $('#phone').val(user.phone);
                    $('#email').val(user.email);
                    $('#role').val(user.role);
                    $('#status').prop('checked', user.status == 1);
                    $('#description').val(user.description || '');

                    $('#passwordField').hide();
                    $('#confirmPasswordField').hide();
                    $('#password').prop('required', false);
                    $('#confirmPassword').prop('required', false);
                }
            }

            var modal = new bootstrap.Modal(document.getElementById('userModal'));
            modal.show();
        }

        // 显示用户详情
        function showUserDetail(userId) {
            var user = userData.find(u => u.id == userId);
            if (user) {
                $('#detailAvatar').text(user.realname.charAt(0));
                $('#detailRealname').text(user.realname);
                $('#detailUsername').text(user.username);
                $('#detailPhone').text(user.phone);
                $('#detailEmail').text(user.email);
                $('#detailRole').text(getRoleText(user.role));
                $('#detailStatus').text(user.status == 1 ? '正常' : '禁用');
                $('#detailStatus').removeClass('bg-success bg-danger').addClass(user.status == 1 ? 'bg-success' : 'bg-danger');
                $('#detailLastLogin').text(user.lastLogin);
                $('#detailCreateTime').text(user.createTime);

                var modal = new bootstrap.Modal(document.getElementById('userDetailModal'));
                modal.show();
            }
        }

        // 保存用户
        function saveUser() {
            var form = $('#userForm')[0];
            if (!form.checkValidity()) {
                form.classList.add('was-validated');
                return;
            }

            // 验证密码
            if ($('#passwordField').is(':visible')) {
                var password = $('#password').val();
                var confirmPassword = $('#confirmPassword').val();

                if (password.length < 6) {
                    $('#password').addClass('is-invalid');
                    $('#password').next('.invalid-feedback').text('密码长度不能少于6位');
                    return;
                }

                if (password !== confirmPassword) {
                    $('#confirmPassword').addClass('is-invalid');
                    $('#confirmPassword').next('.invalid-feedback').text('两次输入的密码不一致');
                    return;
                }
            }

            var userId = $('#userId').val();
            var userDataObj = {
                username: $('#username').val(),
                realname: $('#realname').val(),
                phone: $('#phone').val(),
                email: $('#email').val(),
                role: $('#role').val(),
                status: $('#status').prop('checked') ? 1 : 0,
                description: $('#description').val()
            };

            if (userId) {
                // 编辑用户
                var index = userData.findIndex(u => u.id == userId);
                if (index !== -1) {
                    userData[index] = {...userData[index], ...userDataObj};
                    layer.msg('用户信息更新成功', {icon: 1});
                }
            } else {
                // 添加用户
                var newId = Math.max(...userData.map(u => u.id)) + 1;
                userDataObj.id = newId;
                userDataObj.createTime = new Date().toISOString().split('T')[0];
                userDataObj.lastLogin = '从未登录';
                userData.push(userDataObj);
                layer.msg('用户添加成功', {icon: 1});
            }

            $('#userModal').modal('hide');
            currentPage = 1;
            renderUserTable();
            setupPagination();
            updateStats();
        }

        // 删除用户
        function deleteUser(userId) {
            var user = userData.find(u => u.id == userId);
            if (user) {
                layer.confirm('确定要删除用户 "' + user.realname + '" 吗？', {
                    icon: 3,
                    title: '删除确认'
                }, function(index) {
                    userData = userData.filter(u => u.id != userId);
                    renderUserTable();
                    setupPagination();
                    updateStats();
                    layer.msg('用户删除成功', {icon: 1});
                    layer.close(index);
                });
            }
        }

        // 批量删除用户
        function batchDeleteUsers() {
            var selectedIds = [];
            $('.user-checkbox:checked').each(function() {
                selectedIds.push($(this).val());
            });

            if (selectedIds.length === 0) {
                layer.msg('请选择要删除的用户', {icon: 2});
                return;
            }

            layer.confirm('确定要删除选中的 ' + selectedIds.length + ' 个用户吗？', {
                icon: 3,
                title: '批量删除确认'
            }, function(index) {
                userData = userData.filter(u => !selectedIds.includes(u.id.toString()));
                renderUserTable();
                setupPagination();
                updateStats();
                $('#checkAll').prop('checked', false);
                updateBatchDeleteButton();
                layer.msg('已成功删除 ' + selectedIds.length + ' 个用户', {icon: 1});
                layer.close(index);
            });
        }

        // 更新批量删除按钮状态
        function updateBatchDeleteButton() {
            var selectedCount = $('.user-checkbox:checked').length;
            $('#batchDeleteBtn').prop('disabled', selectedCount === 0);
        }

        // 表单字段验证
        function validateField(field) {
            var value = field.val();
            var isValid = true;
            var feedback = '';

            if (field.attr('name') === 'username' && value) {
                if (value.length < 3) {
                    isValid = false;
                    feedback = '用户名长度不能少于3位';
                }
            } else if (field.attr('name') === 'phone' && value) {
                // var phoneRegex = /^1[3-9]\d{9}$/;
                // if (!phoneRegex.test(value)) {
                //     isValid = false;
                //     feedback = '请输入正确的手机号';
                // }
            } else if (field.attr('name') === 'email' && value) {
                // if (!emailRegex.test(value)) {
                //     isValid = false;
                //     feedback = '请输入正确的邮箱地址';
                // }
            }

            if (isValid) {
                field.removeClass('is-invalid').addClass('is-valid');
            } else {
                field.removeClass('is-valid').addClass('is-invalid');
                field.next('.invalid-feedback').text(feedback);
            }
        }

        // 初始化页面
        initPage();
    });
</script>
